// style.scss

// Import partials here
@import 'base.normalize';
@import 'settings.variables';
@import 'settings.responsive';
@import 'components.content';

*, ::after, ::before {
  box-sizing: border-box;
}

overrides { box-sizing: border-box; }
.selector-for-some-widget {
  box-sizing: content-box;
}

body {
    margin: 0;
    font-family: $font-fam;
    font-size: 100%;
    color: $textcolor;
    line-height: 1.4;
    text-align: left;
    background-color: #fff;
}
a {
  color: var(--teal);
}
text {
  display: block;
  white-space: nowrap;
}
div {
  display: block;
}

// My variable overrides
// Optional Bootstrap parts
$body-bg: #ffffff;
$body-color: #111111;

/* index.html page overrides */
// Jumbotron
.jumbotron {
  padding: 1rem;
  margin: 0;
};
.jumbotron p.lead {
  margin-left: auto;
  margin-right: auto;
}
// container
.container-x.d-inline img {

}
.caption div {
  overflow: hidden;
  max-width: 480px;
  align-items: flex-start;
  text-align: center;
}
p.custom {
  margin-bottom: .1rem;
  margin-left: 2rem;
  margin-right: 2rem;
}
.display-2 {
  margin-top: 0;
  margin-bottom: .5rem;
}
.lead {
  margin-left: 2rem;
  margin-right: 2rem;
}

// Normandy Images - Carousel Page - Responsive Images
.container-1 {

}
.carousel-inner > .carousel-item > img {
  width: auto;
  //max-width: 100% \9;
  //height: auto;
}
.carousel-caption {
    left: 50%;
    top: 70%;
    transform: translate(-50%, -50%);
}
// End Normandy Images - Carousel page

.bd-placeholder-img-lg {
  font-size: 3.5rem;
}
.bd-placeholder-img {
  font-size: 1.125rem;
  text-anchor: middle;
  user-select: none;
}
.img-fluid {
    //max-width: 100% \9;
    //height: auto;
  // Carousel
  width: auto;
  max-height: 480px;
}
svg {
  overflow: hidden;
  vertical-align: middle;
}
// thumbnail images
.bd-example {
  position: relative;
  padding: 1rem;
  margin: 1rem -15px 0;
  border: solid #f8f9fa;
  border-width: .2rem 0 0;
}
.bd-example::after {
  display: block;
  clear: both;
  content: "";
}
.img-* {

}
.img-thumbnail {
  padding: .25rem;
  background-color: #fff;
  border: 1px solid #dee2e6;
  border-radius: .25rem;
  max-width: 100%;
  height: auto;
}
div.text-center {
  text-align: center!important;
}
rect {
  width: 100%;
  height: 100%;
  fill: rgb(134, 142, 150);
}
:not(svg) {
  transform-origin: 0px 0px;
}
.bd-example>img+img, .bd-example>svg+svg {
  margin-left: .5rem;
}
.float-right {
  float: right;
}
.rounded {
  border-radius: .25rem
}
figure {
  display: block;
  margin-block-start: 1em;
  margin-block-end: 1em;
  margin-inline-start: 40px;
  margin-inline-end: 40px;
}
// Grid area
.container2 {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: 149px 81px 649px 1fr 152px;
  grid-template-areas:
    'header header header header header'
    'nav nav nav nav nav'
    'sidebar main main main main'
    'footer footer footer footer footer';
}

.item1 {
    display: flex;
    justify-content: center;
    align-items: center;
    padding:  1em;
    color: $white;
    font-family: $font-fam;
    font-size: $fontsize;
}
@media print {
  .container {
    width: auto;
  }
}

@media (min-width: 768px) {
  .custom-element {
    color: var(--primary);
  }
  .carousel-caption {
     font-size-adjust: 0.5;
     left: 50%;
     top: 60%;
     transform: translate(-50%, -50%);
 }
}


// Bootstrap and its default variables - this imports all of bootstrap variables
// @import "../node_modules/bootstrap/scss/bootstrap";
  // Variable overrides within the same Sass file can come before or after the default variables. However, when overriding across Sass files, your overrides must come before you import Bootstrapâ€™s Sass files. (https://getbootstrap.com/docs/4.3/getting-started/theming/#sass)
  // Put Bootstrap imports at the end of the Sass file.

// Required Bootstrap 4.3 parts
// Functions can manipulate colors, SVGs, calc, etc
@import "../node_modules/bootstrap/scss/functions";
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/mixins";

$theme-colors: map-remove($theme-colors, "info", "light", "dark");
